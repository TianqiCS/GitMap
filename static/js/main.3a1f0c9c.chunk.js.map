{"version":3,"sources":["components/Page.js","utils/networks.js","components/Input.js","App.js","serviceWorker.js","index.js"],"names":["Page","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onlyFollower","user","state","following","some","u","login","react_default","a","createElement","lib","id","label","shape","image","avatarUrl","color","from","userId","to","arrows","inherit","onlyFollowing","followers","Fragment","handleDoubleClick","event","nodes","window","location","pathname","name","url","options","edges","smooth","type","forceDirection","length","networkRef","React","createRef","_this2","axios","get","error","console","log","fetchNodes","then","data","status","setState","current","network","on","className","ref","map","Alert","bsStyle","onDismiss","Component","Input","FormGroup","ControlLabel","FormControl","value","placeholder","onChange","Feedback","HelpBlock","Child","_ref","match","Page_Page","userid","params","Home","userRedirect","href","PageHeader","Jumbotron","components_Input","ev","target","onPressEnter","Button","onClick","Panel","Heading","Title","componentClass","Body","src","alt","Link","App","BrowserRouter","Navbar","inverse","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","NavItem","eventKey","NavDropdown","title","MenuItem","divider","pullRight","Route","exact","path","component","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a1f0c9c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Network, Node, Edge } from '@lifeomic/react-vis-network';\r\nimport {fetchNodes} from \"../utils/networks\";\r\nimport {Alert} from \"react-bootstrap\";\r\n\r\n\r\nexport default class Page extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                userId: \"\",\r\n                name: \"\",\r\n                avatarUrl: \"\",\r\n                url: \"\",\r\n                followers: [],\r\n                following: [],\r\n            },\r\n            options: {\r\n                \"edges\": {\r\n                    smooth: {\r\n                        \"type\": \"dynamic\",\r\n                        \"forceDirection\": \"none\"\r\n                    },\r\n                    length: 100\r\n                }\r\n            }\r\n        };\r\n        this.networkRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchNodes(window.location.pathname).then((data) =>{\r\n            console.log(data);\r\n            if (data.status === 200 && data.data.data.user) {\r\n                data = data.data.data;\r\n                this.setState({\r\n                    user: {\r\n                        userId: data.user.login,\r\n                        name: data.user.name,\r\n                        avatarUrl: data.user.avatarUrl,\r\n                        url: data.user.url,\r\n                        followers: data.user.followers.nodes,\r\n                        following: data.user.following.nodes,\r\n                    }\r\n                });\r\n                this.networkRef.current.network.on(\"doubleClick\", this.handleDoubleClick);\r\n            }\r\n            else {\r\n                this.setState({error: data.data.error})\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    onlyFollower = (user) => {\r\n        if (!this.state.user.following.some(u => u.login === user.login)) {\r\n            return [\r\n                <Node id={user.login} label={user.login} shape='circularImage' image={user.avatarUrl} color=\"#3333ff\"/>,\r\n                <Edge id={user.login} from={this.state.user.userId} to={user.login} arrows=\"from\" color={{inherit:'to'}}/>\r\n                ]\r\n        }\r\n        else {\r\n            return [\r\n                <Node id={user.login} label={user.login} shape='circularImage' image={user.avatarUrl} color=\"#33ff33\"/>,\r\n                <Edge id={user.login} from={this.state.user.userId} to={user.login} arrows=\"to;from\" color={{inherit:'to'}}/>\r\n            ]\r\n        }\r\n    };\r\n\r\n    onlyFollowing = (user) => {\r\n        if (!this.state.user.followers.some(u => u.login === user.login)) {\r\n            return [\r\n                <Node id={user.login} label={user.login} shape='circularImage' image={user.avatarUrl} color=\"#ff6633\"/>,\r\n                <Edge id={user.login} from={this.state.user.userId} to={user.login} arrows=\"to\" color={{inherit:'to'}}/>\r\n            ]\r\n        }\r\n        else {\r\n            return <></>\r\n        }\r\n    };\r\n\r\n    handleDoubleClick = (event) => {\r\n        if (event.nodes[0] && event.nodes[0]!==this.state.user.userId) {\r\n            window.location.pathname = event.nodes[0]\r\n        }\r\n    };\r\n\r\n\r\n\r\n    /*\r\n\r\n*/\r\n\r\n    render() {\r\n        if (this.state.user.userId && !this.state.error) {\r\n            return (\r\n                <Network className=\"network\" ref={this.networkRef} options={this.state.options}>\r\n                    <Node id={this.state.user.userId} label={this.state.user.userId} shape='circularImage'\r\n                          image={this.state.user.avatarUrl}/>\r\n                    {this.state.user.following.map(this.onlyFollowing)}\r\n                    {this.state.user.followers.map(this.onlyFollower)}\r\n                </Network>\r\n            );\r\n        } else if (this.state.error){\r\n            return (\r\n                <div id=\"Page\">\r\n                    <Alert bsStyle=\"danger\" onDismiss={()=>{window.location.pathname=\"\"}}>\r\n                        <h4>Oh snap! You got an error!</h4>\r\n                        <p>Your query cannot be fulfilled.</p>\r\n                        <p>These are the possible reasons:</p>\r\n                        <ul>The user does not exist.</ul>\r\n                        <ul>The server is not available.</ul>\r\n                    </Alert>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (<></>)\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport const fetchNodes = (userId)=> {\r\n    let url = \"http://vanillacraft.cn:3001\";\r\n    try {\r\n        return axios.get(url + userId)\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n};","import {Component} from \"react\";\r\nimport {ControlLabel, FormControl, FormGroup, HelpBlock} from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nclass Input extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <FormGroup>\r\n                    <ControlLabel>Enter a Github username</ControlLabel>\r\n                    <FormControl\r\n                        type=\"text\"\r\n                        value={this.props.value}\r\n                        placeholder=\"Enter text\"\r\n                        onChange={this.props.onChange}\r\n                    />\r\n                    <FormControl.Feedback />\r\n                    <HelpBlock>You can also use your own Github private token. TODO</HelpBlock>\r\n                </FormGroup>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input","import React, { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\nimport Page from \"./components/Page\";\nimport {Button, Jumbotron, MenuItem, Nav, Navbar, NavDropdown, NavItem, PageHeader, Panel} from \"react-bootstrap\";\nimport Input from \"./components/Input\";\n\n// const server = \"localhost:3001\"; @see utils/networks.js\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"page\">\n                <Navbar id=\"nav\" inverse collapseOnSelect>\n                    <Navbar.Header>\n                        <Navbar.Brand>\n                            <Link to=\"/\">GitMap</Link>\n                        </Navbar.Brand>\n                        <Navbar.Toggle />\n                    </Navbar.Header>\n                    <Navbar.Collapse>\n                        <Nav>\n                            <NavItem eventKey={1} href=\"#\">\n                                Link\n                            </NavItem>\n                            <NavItem eventKey={2} href=\"#\">\n                                Link\n                            </NavItem>\n                            <NavDropdown eventKey={3} title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                                <MenuItem eventKey={3.1}>Action</MenuItem>\n                                <MenuItem eventKey={3.2}>Another action</MenuItem>\n                                <MenuItem eventKey={3.3}>Something else here</MenuItem>\n                                <MenuItem divider />\n                                <MenuItem eventKey={3.3}>Separated link</MenuItem>\n                            </NavDropdown>\n                        </Nav>\n                        <Nav pullRight>\n                            <NavItem eventKey={1} href=\"#\">\n                                Link Right\n                            </NavItem>\n                            <NavItem eventKey={2} href=\"#\">\n                                Link Right\n                            </NavItem>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/:id\" component={Child}/>\n            </div>\n        </Router>\n    );\n}\n\nfunction Child({ match }) {\n  return (\n      <Page userid={match.params.id}/>  //\n  );\n}\n\nclass Home extends React.Component {\n    state = {\n      userId: \"\"\n    };\n\n    userRedirect = () => {\n        if (this.state.userId) {\n            window.location.href=\"/\"+this.state.userId;\n        }\n    };\n\n    render() {\n        return(\n            <div id=\"home\">\n                <br/><br/><br/>\n                <PageHeader>\n                    Github User Mapping <small>see your following and followers!</small>\n                </PageHeader>\n\n                <Jumbotron>\n                    <p>\n                        This app enables you to visualize your github user mapping, including followers and followings.\n                    </p>\n                    <p>\n                        <Input value={this.state.userId} onChange={ev => this.setState({userId: ev.target.value})} onPressEnter={this.userRedirect}/>\n                        <Button bsStyle=\"info\" onClick={this.userRedirect}>Show me the graph! </Button>\n                    </p>\n                </Jumbotron>\n\n                <Panel id=\"example\">\n                    <Panel.Heading>\n                        <Panel.Title componentClass=\"h3\">Example</Panel.Title>\n                    </Panel.Heading>\n                    <Panel.Body>\n                        <img id=\"exampleImg\" src=\"example.png\" alt=\"graph\"/>\n                    </Panel.Body>\n                </Panel>\n\n                <Panel id=\"about\">\n                    <Panel.Heading>\n                        <Panel.Title componentClass=\"h3\">About</Panel.Title>\n                    </Panel.Heading>\n                    <Panel.Body>\n                        <p><a href=\"http://somewhere\">GitRepo</a></p>\n                        <p>Made by <Link to=\"/TianqiCS/\">Tianqi Wang</Link></p>\n                        <p>Last Updated on 2019-01-26</p>\n                    </Panel.Body>\n                </Panel>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}